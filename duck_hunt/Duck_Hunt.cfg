 ###############################################################################
#
# Duck Hunt v2.11  ©2015-2016 Menz Agitat
# v2.16.20230823 (20230828) Worm
# Setup Parameters
#
 ###############################################################################



#####  LANGUE  #################################################################

# Please refer to the beginning of the Duck_Hunt.tcl file for
# the language configuration.



#####  COMPORTEMENT DES CANARDS  ###############################################

# Number of ducks per day per chan.
variable number_of_ducks_per_day 48

# Approximate number of super ducks per day per chan.
# This number is approximate since subject to the laws of probability, there will be
# so "roughly" the desired number of super-ducks per day.
# Super-ducks are also ducks and are therefore counted in
# number_of_ducks_per_day; for this reason, there can be no more super-
# ducks than ducks.
# A super duck is harder to kill, gives more xp and cannot be
# scared.
variable approx_number_of_golden_ducks_per_day 4

# Minimum number of health points of a super duck.
# Each hit point will require a shot.
variable golden_duck_min_HP 3

# Maximum number of health points of a super-duck.
# Each hit point will require a shot.
variable golden_duck_max_HP 5

# And the ducks, they never sleep?
# You can define one or more hours during which there will be no
# of ducks taking flight.
# These times must be preceded by a 0 when they are less than 10.
# Exemple : variable duck_sleep_hours {02 03 04 05}
variable duck_sleep_hours {}

# And the ducks, they never sleep?
# You can define one or more hours during which there will be no
# of ducks taking flight.
# These times must be preceded by a 0 when they are less than 10.# Method used to determine when a duck should fly:
# 1 = Every minute there are "number_of_ducks_per_day" chances out of 1440 for
#   that a duck flies away.
#   With this method, the laws of probability apply; so there will be
#   "roughly" the desired number of ducks per day and fledging times
#   will be unpredictable.
# 2 = Flight times are determined in advance and distributed in such a way
#   relatively homogeneous throughout the day.
#   Allows to have exactly "number_of_ducks_per_day" ducks per day.
#   Allows an Eggdrop admin to know the times in advance
#   flight
variable method 2

# After how many shots does the duck run away scared? (-1 = unlimited)
variable shots_before_duck_flee 3

# Should successful shots also scare other ducks in flight?
# Note: If you set this parameter to 0, only the most missed shots
# frighten. (0 = no / 1 = yes)
variable successful_shots_also_scares_ducks 1

# How long can the duck be shot before it escapes?
# (in seconds)
variable escape_time 300


#####  MUNITIONS  #########################################

# Should magazines have unlimited capacity? (0 = no / 1 = yes)
variable unlimited_ammo_per_clip 0

# Should the number of chargers be unlimited? (0 = no / 1 = yes)
variable unlimited_ammo_clips 0



##### HUNTING ACCIDENTS and HUNTER MANAGEMENT ###########################

# Flags that will be exempt from the risk of taking a stray ball.
# Note that flags will be tested both globally and locally.
# If for example you want to exclude the a and o flags, put "ao".
# If you don't want to exclude anyone, put ""
variable exempted_flags "b"

# Percentage of chance of accidentally hitting another player in the event of a shot
# missed or ricochet, if there is a duck on the chan.
# If there are between 1 and 10 people on the channel:
variable chances_to_hit_someone_else_1_10 10
# If there are between 11 and 20 people on the chan:
variable chances_to_hit_someone_else_11_20 12
# If there are between 21 and 30 people on the chan:
variable chances_to_hit_someone_else_21_30 14
# If there are more than 30 people on the channel:
variable chances_to_hit_someone_else_31_ 15

# Percentage of chance of accidentally hitting another player in the event of a shot
# wild or ricochet, if there is no duck on the chan.
# Note: we differentiate this case to discourage players from trying to
# draw at random with the aim of reaching other users.
# If there are between 1 and 10 people on the channel:
variable chances_wild_fire_hit_someone_1_10 1
# If there are between 11 and 20 people on the chan:
variable chances_wild_fire_hit_someone_11_20 2
# If there are between 21 and 30 people on the chan:
variable chances_wild_fire_hit_someone_21_30 3
# If there are more than 30 people on the channel:
variable chances_wild_fire_hit_someone_31_ 4

# Percentage chance of hitting the duck after the bullet ricochets.
variable chances_to_ricochet_towards_duck 10

# Maximum number of ricochets.
# Once this number is reached, the ball has lost all its energy and falls.
variable max_ricochets 5

# Should we kick hunters who shoot irresponsibly while
# no ducks in sight? (0 = no / 1 = yes)
variable kick_on_wild_fire 0

# A user who receives a stray ball and fails to stop it or
# to deflect it should it be kicked?
variable kick_when_shot 0

# Should a hunter whose rifle explodes due to sabotage be kicked by
# the explosion?
variable kick_when_sabotaged 0

# If your server uses Anope or Epona services, you can set this
# parameter so that kicks are performed by ChanServ.
# (0 = kicks by Eggdrop / 1 = kicks by Chanserv)
variable kick_method 0

# Do you want only hunters (i.e. users
# with statistics) can be victims of hunting accidents?
# (0 = all users can have a hunting accident / 1 = only
# hunters can have a hunting accident)
variable only_hunters_can_be_shot 0

# Should we confiscate our weapon from players who touch someone else by
# accident ? (0 = non / 1 = oui)
variable gun_confiscation_when_shooting_someone 1

# Should we confiscate our weapon to players who open fire in the absence of
# canard ? (0 = non / 1 = oui)
variable gun_confiscation_on_wild_fire 1

# Should confiscated weapons be returned:
#1 - automatically every day at a specified time
# 2 - automatically after the next flight of duck(s) (understand that the
# confiscated weapons will be returned AFTER the next duck has been killed
# or escaped).
# 3 - manually (cf. !rearm command)
variable gun_hand_back_mode 2

# Time at which automatically confiscated weapons will be returned to
# players.
# These times must be preceded by a 0 when they are less than 10.
# Note: this parameter will be ignored if gun_hand_back_mode is not 1 or if
# the gun_confiscation_when_shooting_someone and
# gun_confiscation_on_wild_fire are both disabled.
variable auto_gun_hand_back_time "00:00"

# Time at which players will be resupplied with ammo.
# These times must be preceded by a 0 when they are less than 10.
variable auto_refill_ammo_time "00:00"

# Voice the hunters who manage to kill a duck? (0 = no / 1 = yes)
variable voice_when_duck_shot 0

# Unleash hunters who shoot without a duck? (0 = no / 1 = yes)
variable devoice_on_wild_fire 0

# ccc
# (0 = no / 1 = yes)
variable devoice_on_accident 0

# Mute hunters who miss a shot? (0 = no / 1 = yes)
variable devoice_on_miss 0

# Activate anti-highlight system? (0 = no / 1 = yes)
# When the anti-hl system is activated, the graphical representation of the flight
# of the ducks will be randomly generated each time in order to thwart attempts to
# highlight the ducks or automate shooting through a script.
# If this option is disabled, all ducks will be identical to the following model:
# -.,žž.-·°'`'°·-.,žž.-·°'`'°· \_O<   COIN
variable hl_prevention 0

# Activate anti-circumvention system for weapon confiscation?
# (0 = no / 1 = yes)
# When this system is enabled and the statistics of two users are automatically merged,
# if the user with whom we are merging no longer has a weapon while the current user has
# one, the statistics of the latter will not be taken into account.
# In the case where the merge occurs between two users who are both disarmed,
# the statistics of the one with the least XP will not be taken into account.
variable confiscation_enforcement_on_fusion 0




# Number of experience points gained for each successfully shot duck.
variable xp_duck 10

# Base experience points for "super-ducks."
# The number of experience points that a super-duck gives is equal to this value
# multiplied by its health points.
variable base_xp_golden_duck 12

# Number of experience points gained for a "lucky shot," which is when a hunter
# manages to hit a duck after one or more ricochets.
variable xp_lucky_shot 25

# Progression table for levels.
# Players start at level 1 with 0 experience points.
# You can add as many levels as you want or make modifications as you please,
# as long as you follow the following rules:
#		- Follow the current syntax.
#		- Ensure that the starting bonuses or penalties combined with the bonuses
#			granted by the different levels never result in a value < 0% or > 100%.
#		- The number of points required to advance to the next level after the
#			highest level must require 9999999999 experience points.
#		- In the packs, message m134 must contain as many titles as there are levels.
# Syntax: level_grantings(level) "xp,accuracy,deflection,defense,jamming,magazine_size,num_magazines,miss_penalty,wild_shot_penalty,accident_penalty"
#		- level: The level for which the following data applies.
#		- xp: Number of experience points required to advance to the next level.
#		- accuracy: Chances of hitting a duck.
#		- deflection: Chances of an accidental shot ricocheting off the player.
#		- defense: Chances of an accidental shot being absorbed by the player's armor
#			and not causing damage.
#		- jamming: Chances of the weapon jamming.
#		- magazine_size: Number of rounds in each magazine.
#		- num_magazines: Number of magazines available to the player.
#			Replenished every day at midnight.
#		- miss_penalty: Experience penalty for each missed shot.
#		- wild_shot_penalty: Experience penalty for each shot taken without a
#			target (wild shots).
#		- accident_penalty: Experience penalty for each player accidentally hit.

set ::DuckHunt::level_grantings(0) "-4,55,0,0,15,6,1,-1,-1,-4"
set ::DuckHunt::level_grantings(1) "20,55,0,0,15,6,2,-1,-1,-4"
set ::DuckHunt::level_grantings(2) "50,56,0,2,14,6,2,-1,-1,-4"
set ::DuckHunt::level_grantings(3) "90,57,1,5,13,6,2,-1,-1,-4"
set ::DuckHunt::level_grantings(4) "140,58,2,7,12,6,2,-1,-1,-4"
set ::DuckHunt::level_grantings(5) "200,59,4,10,11,6,2,-1,-1,-4"
set ::DuckHunt::level_grantings(6) "270,60,6,12,10,6,2,-1,-1,-4"
set ::DuckHunt::level_grantings(7) "350,65,8,15,7,4,3,-1,-1,-4"
set ::DuckHunt::level_grantings(8) "440,67,10,17,7,4,3,-1,-1,-4"
set ::DuckHunt::level_grantings(9) "540,69,12,20,7,4,3,-1,-1,-4"
set ::DuckHunt::level_grantings(10) "650,71,14,22,6,4,3,-1,-2,-6"
set ::DuckHunt::level_grantings(11) "770,73,16,25,6,4,3,-1,-2,-6"
set ::DuckHunt::level_grantings(12) "900,73,18,27,6,4,3,-1,-2,-6"
set ::DuckHunt::level_grantings(13) "1040,74,20,30,5,4,3,-1,-2,-6"
set ::DuckHunt::level_grantings(14) "1190,74,22,32,5,4,3,-1,-2,-6"
set ::DuckHunt::level_grantings(15) "1350,75,24,35,5,4,3,-1,-2,-6"
set ::DuckHunt::level_grantings(16) "1520,80,26,37,3,2,4,-1,-2,-6"
set ::DuckHunt::level_grantings(17) "1700,81,28,40,3,2,4,-1,-2,-6"
set ::DuckHunt::level_grantings(18) "1890,81,30,42,3,2,4,-1,-2,-6"
set ::DuckHunt::level_grantings(19) "2090,82,31,45,3,2,4,-1,-2,-6"
set ::DuckHunt::level_grantings(20) "2300,82,32,47,3,2,4,-3,-5,-10"
set ::DuckHunt::level_grantings(21) "2520,83,33,50,2,2,4,-3,-5,-10"
set ::DuckHunt::level_grantings(22) "2750,83,34,52,2,2,4,-3,-5,-10"
set ::DuckHunt::level_grantings(23) "2990,84,35,55,2,2,4,-3,-5,-10"
set ::DuckHunt::level_grantings(24) "3240,84,36,57,2,2,4,-3,-5,-10"
set ::DuckHunt::level_grantings(25) "3500,85,37,60,2,2,4,-3,-5,-10"
set ::DuckHunt::level_grantings(26) "3770,90,38,62,1,1,5,-3,-5,-10"
set ::DuckHunt::level_grantings(27) "4050,91,39,65,1,1,5,-3,-5,-10"
set ::DuckHunt::level_grantings(28) "4340,91,40,67,1,1,5,-3,-5,-10"
set ::DuckHunt::level_grantings(29) "4640,92,41,70,1,1,5,-3,-5,-10"
set ::DuckHunt::level_grantings(30) "4950,92,42,72,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(31) "5270,93,43,75,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(32) "5600,93,44,77,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(33) "5940,94,45,80,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(34) "6290,94,46,82,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(35) "6650,95,47,85,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(36) "7020,95,48,87,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(37) "7400,96,48,90,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(38) "7790,96,49,92,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(39) "8200,97,49,95,1,1,5,-5,-8,-20"
set ::DuckHunt::level_grantings(40) "9999,97,50,98,1,1,5,-5,-8,-30"
set ::DuckHunt::level_grantings(41) "10949,111,111,112,1,1,5,-5,-9,-40"
set ::DuckHunt::level_grantings(42) "11899,112,112,113,1,1,5,-5,-9,-40"
set ::DuckHunt::level_grantings(43) "12849,113,113,114,1,1,5,-5,-9,-40"
set ::DuckHunt::level_grantings(44) "13799,114,114,115,1,1,5,-5,-9,-40"
set ::DuckHunt::level_grantings(45) "15299,115,115,116,1,1,5,-5,-9,-40"
set ::DuckHunt::level_grantings(46) "16799,116,116,117,1,1,5,-6,-10,-41"
set ::DuckHunt::level_grantings(47) "18299,117,117,118,1,1,5,-6,-10,-41"
set ::DuckHunt::level_grantings(48) "19799,118,118,119,1,1,5,-6,-10,-41"
set ::DuckHunt::level_grantings(49) "21299,119,119,120,1,1,5,-6,-10,-41"
set ::DuckHunt::level_grantings(50) "22799,120,120,121,1,1,5,-6,-10,-41"
set ::DuckHunt::level_grantings(51) "24299,121,121,122,1,1,5,-6,-10,-41"
set ::DuckHunt::level_grantings(52) "25799,122,122,123,1,1,5,-6,-10,-41"
set ::DuckHunt::level_grantings(53) "27299,123,123,124,1,1,5,-6,-10,-41"
set ::DuckHunt::level_grantings(54) "28799,124,124,125,1,1,5,-6,-10,-41"
set ::DuckHunt::level_grantings(55) "30949,125,125,126,1,1,5,-6,-10,-41"
set ::DuckHunt::level_grantings(56) "33099,126,126,127,1,1,5,-7,-11,-42"
set ::DuckHunt::level_grantings(57) "35249,127,127,128,1,1,5,-7,-11,-42"
set ::DuckHunt::level_grantings(58) "37399,128,128,129,1,1,5,-7,-11,-42"
set ::DuckHunt::level_grantings(59) "39549,129,129,130,1,1,5,-7,-11,-42"
set ::DuckHunt::level_grantings(60) "41699,130,130,131,1,1,5,-7,-11,-42"
set ::DuckHunt::level_grantings(61) "43849,131,131,132,1,1,5,-7,-11,-42"
set ::DuckHunt::level_grantings(62) "45999,132,132,133,1,1,5,-7,-11,-42"
set ::DuckHunt::level_grantings(63) "48149,133,133,134,1,1,5,-7,-11,-42"
set ::DuckHunt::level_grantings(64) "50299,134,134,135,1,1,5,-7,-11,-42"
set ::DuckHunt::level_grantings(65) "53199,135,135,136,1,1,5,-7,-11,-42"
set ::DuckHunt::level_grantings(66) "56099,136,136,137,1,1,5,-8,-12,-43"
set ::DuckHunt::level_grantings(67) "58999,137,137,138,1,1,5,-8,-12,-43"
set ::DuckHunt::level_grantings(68) "61899,138,138,139,1,1,5,-8,-12,-43"
set ::DuckHunt::level_grantings(69) "64799,139,139,140,1,1,5,-8,-12,-43"
set ::DuckHunt::level_grantings(70) "67699,140,140,141,1,1,5,-8,-12,-43"
set ::DuckHunt::level_grantings(71) "70599,141,141,142,1,1,5,-8,-12,-43"
set ::DuckHunt::level_grantings(72) "73499,142,142,143,1,1,5,-8,-12,-43"
set ::DuckHunt::level_grantings(73) "76399,143,143,144,1,1,5,-8,-12,-43"
set ::DuckHunt::level_grantings(74) "79299,144,144,145,1,1,5,-8,-12,-43"
set ::DuckHunt::level_grantings(75) "82099,145,145,146,1,1,5,-8,-12,-43"
set ::DuckHunt::level_grantings(76) "84899,146,146,147,1,1,5,-9,-13,-44"
set ::DuckHunt::level_grantings(77) "87699,147,147,148,1,1,5,-9,-13,-44"
set ::DuckHunt::level_grantings(78) "90499,148,148,149,1,1,5,-9,-13,-44"
set ::DuckHunt::level_grantings(79) "93299,149,149,150,1,1,5,-9,-13,-44"
set ::DuckHunt::level_grantings(80) "96099,150,150,151,1,1,5,-9,-13,-44"
set ::DuckHunt::level_grantings(81) "98899,151,151,152,1,1,5,-9,-13,-44"
set ::DuckHunt::level_grantings(82) "101699,152,152,153,1,1,5,-9,-13,-44"
set ::DuckHunt::level_grantings(83) "104499,153,153,154,1,1,5,-9,-13,-44"
set ::DuckHunt::level_grantings(84) "107299,154,154,155,1,1,5,-9,-13,-44"
set ::DuckHunt::level_grantings(85) "110099,155,155,156,1,1,5,-9,-13,-44"



# Enable store? (0 = no / 1 = yes)
variable shop_enabled 1

# When using the !shop command without an argument, should we display the list
# of available items or a URL for online viewing? (0 = notice / 1 = URL)
# See also the shop_url parameter.
variable shop_preferred_display_mode 1

# URL of the store's help page.
variable shop_url "https://uk.computertech.ovh/DuckHunt/shop_en.html"

# Minimum number of experience points required to access the store.
# Note that if the cost of a purchase would reduce a player's experience points
# below this value, the purchase will be denied.
variable min_xp_for_shopping 0

# Cost of items in experience points. These values have been balanced based on
# the default settings of the script. If you modify these settings, you may need
# to adjust the following parameters to maintain balance.
# Extra ammo added directly to the rifle, one-time use:
variable extra_ammo_cost 7
# Extra magazine added to the reserve, one-time use:
variable extra_clip_cost 20
# AP (armor-piercing) ammunition for 24 hours, damage x2:
variable AP_ammo_cost 15
# Explosive ammunition for 24 hours, damage x3:
variable explosive_ammo_cost 25
# Buyback of a confiscated weapon:
variable hand_back_confiscated_weapon_cost 40
# Gun grease, halves the chance of jamming for 24 hours and protects
# against the effects of sand once OR removes the effects of sand once:
variable grease_cost 8
# Sight, improves the accuracy of the next shot by
# (% remaining to reach 100)/3:
variable sight_cost 6
# Infrared detector, blocks the weapon trigger when there are no ducks,
# lasts for 24 hours:
variable infrared_detector_cost 15
# Silencer, does not scare ducks when shooting, lasts for 24 hours:
variable silencer_cost 5
# Four-leaf clover, random XP bonus (between 1 and 10, determined at purchase)
# on all ducks killed for 24 hours:
variable four_leaf_clover_cost 13
# Sunglasses, protects against glare:
variable sunglasses_cost 5
# Spare clothes, cancels the effect of water bucket: 
variable spare_clothes_cost 7

# Spare clothes, cancels the effect of water bucket:
variable spare_clothes_cost 7
# Brush for weapon, cancels the effects of sand and sabotage:
variable brush_for_weapon_cost 7
# Mirror, blinds a hunter and reduces their accuracy by 50% for their next shot:
variable mirror_cost 7
# Sand, reduces a hunter's weapon reliability by 50% for their next shot:
variable sand_cost 7
# Water bucket, forces a hunter to wait 1 hour for their clothes to dry before
# they can hunt again:
variable water_bucket_cost 10
# Sabotage, causes a hunter's weapon to jam and explode on their next shot:
variable sabotage_cost 14
# Life insurance, allows the player to gain 2x the shooter's level in experience
# points if they are accidentally hit, lasts for 1 week and disappears after use:
variable life_insurance_cost 10
# Liability insurance, reduces the experience point penalty for hunting accidents
# by 3 for 2 days:
variable liability_insurance_cost 5
# Decoy, attracts a duck within 10 minutes:
variable decoy_cost 80
# Pieces of bread, increases the chances that a duck will take off and increases
# the time before it leaves, lasts for 1 hour, cumulative:
variable piece_of_bread_cost 50
# Duck detector, one-time use, sends a notice to the player when a duck takes off:
variable duck_detector_cost 50
# Fake duck, launched 10 minutes after purchase, does not provide experience points:
variable fake_duck_cost 50


# Maximum number of pieces of bread that can be active at the same time on a
# channel.
variable max_bread_on_chan 5

# Prevent the use of decoys or pieces of bread during duck sleeping hours
# (see duck_sleep_hours parameter)? (0 = no / 1 = yes)
variable cant_attract_ducks_when_sleeping 1

# Can decoys occasionally attract golden ducks? (0 = no / 1 = yes)
variable decoys_can_attract_golden_ducks 1



#####  DROPS  ##################################################################

# Enable the possibility of finding items on shot ducks? (0 = no / 1 = yes)
variable drops_enabled 1

# Probability of dropping items in number of chances out of 1000.
# Note: the cumulative total of these parameters corresponds to the chances out
# of 1000 of dropping anything (default is 145/1000, or 14.5%).
#
# Random useless item (note that you can add as many useless items as you want by
# modifying the m394 message in the language file):
variable chances_to_drop_junk_item 20
# One bullet:
variable chances_to_drop_ammo 20
# One clip:
variable chances_to_drop_clip 15
# AP ammunition:
variable chances_to_drop_AP_ammo 7
# Explosive ammunition:
variable chances_to_drop_explosive_ammo 5
# Grease:
variable chances_to_drop_grease 7
# Sight:
variable chances_to_drop_sight 12

# Infrared detector:
variable chances_to_drop_infrared_detector 7
# Silencer:
variable chances_to_drop_silencer 12
# Four-leaf clover:
variable chances_to_drop_four_leaf_clover 7
# Sunglasses:
variable chances_to_drop_sunglasses 12
# Ducks detector:
variable chances_to_drop_ducks_detector 12
# Skill book +10xp:
variable chances_to_drop_10_xp 3
# Skill book +20xp:
variable chances_to_drop_20_xp 2
# Skill book +30xp:
variable chances_to_drop_30_xp 1
# Skill book +40xp:
variable chances_to_drop_40_xp 1
# Skill book +50xp:
variable chances_to_drop_50_xp 1
# Skill book +100xp:
variable chances_to_drop_100_xp 1




#####  DISPLAY SETTINGS  ##############################################################

# Preferred display mode for script messages.
# (1 = public channel messages / 2 = player notices)
# Note that some messages will still be displayed as notices such as
# statistics, and that some others will still be displayed in public like
# duck take-offs and shots that hit a target.
variable preferred_display_mode 1

# Filter style codes (colors, bold, ...) in all views of the
#script? (0 = no / 1 = yes)
variable monochrome 0
 
# Maximum length of a displayable line. If the end of some lines is
# truncated, it means you have to decrease this value.
variable max_line_length 435

# Display a warning in partyline and in the Eggdrop logs when a
# user renames himself to a nickname that already has stats?
# Note: at this stage, statistics are not transferred / merged
# as long as the user does not interact with the script.
# (0 = no / 1 = yes)
variable warn_on_rename 0

# Display a warning in partyline and in the Eggdrop logs when
# an appropriation or a fusion of statistics? (0 = no / 1 = yes)
variable warn_on_takeover 1

# Display a message in partyline to inform of a rescheduling of
# hours of flight when a piece of bread is added or expires?
# (0 = no / 1 = yes)
variable show_bread_replanning 1



##### LOGS ########################################### #######################

# Enable hunting logs?
variable hunting_logs 1

# Location of logs.
# The files created will be of the form yyyymmdd_chan.log
# You must verify that the directory you define here exists, and the
# create manually if needed.
variable log_directory "scripts/duck_hunt/logs/"



##### MISCELLANEOUS PARAMETERS ######################################### #############

# How long does the Eggdrop have to join all the chans
# when logging in before planning flights? (in seconds)
# Note: this parameter is only taken into account if method = 2.
variable post_init_delay 60

# Location and name of the file containing the main database.
# You must verify that the directory you define here exists, and the
# create manually if needed.
variable db_file "scripts/duck_hunt/database/player_data.db"

# Time of automatic creation of a backup copy of the database
# data.
# These times must be preceded by a 0 when they are less than 10.
variable backup_time "00:03"

# Location and name of the file that will be generated when exporting the
# table of player statistics.
# You must verify that the directory you define here exists, and the
# create manually if needed.
variable players_table_file "scripts/duck_hunt/players_table.txt"

# Location and name of the file containing the tracking database
# nick changes.
# You must verify that the directory you define here exists, and the
# create manually if needed.
variable pending_transfers_file "scripts/duck_hunt/database/pending_transfers.db"

# Maximum age in seconds of change tracking database
# nicks.
# If the date of the last update of this database is more
# old than this value, it will not be automatically reloaded at
# loading the script because the information it contains will not be
# probably no longer relevant.
variable pending_transfers_file_max_age 3600

# Prefix used by your IRC server to rename users who do not
# don't identify themselves in time.
# The prefix is case sensitive.
# This prefix will be used by the nick change tracking system to
# prevent automatic transfer of statistics to such nicknames.
# If for example the nicks look like "Anonymous54720", put "Anonymous".
variable anonym_prefix ""


##### ORDERS AND PERMISSIONS ######################################## ###

# Command and permissions required to shoot a duck.
variable shooting_cmd "!bang"
variable shooting_cmd2 "@meow"
variable shooting_cmd3 "@bef"
variable shooting_cmd4 "@weed"
variable shooting_cmd5 "@beaverbong"
variable shooting_cmd6 "@quack"
variable shooting_auth "-|-"

# relay fixerUpper
variable relay_bot_nick "tr"
variable shooting_relay "\002\[T\]\002"
variable shooting_relay2 "\002\[freenode\]\002"
variable shooting_relay3 "\002\[IRC-nERDs\]\002"
variable shooting_relay4 "\002\[libera\]\002"
variable shooting_relay5 "\002\[S\]\002"
variable shooting_relay6 "\002\[UnfoundedLamers\]\002"

# <nR> [technet] <04UINRelay> [IRC4Fun] <@07dracorex> 
# <nR> [UnfoundedLamers] <10sur> :]

#help CMD
variable duckHelp_cmd "!help"
variable duckHelp_auth "-|-"

# Command and permissions required to reload his weapon or unjam it if
# it is jammed.
variable reload_cmd "!reload"
variable reload_auth "-|-"

# Command and permissions required to display last flight time
# duck.
# Public order :
variable lastduck_pub_cmd "!lastduck"
variable lastduck_pub_auth "-|-"
# Order by private message:
variable lastduck_msg_cmd "lastduck"
variable lastduck_msg_auth "mno|mnol"

# Command and permissions required to view his hunting data
# personal or that of another player.
variable stat_cmd "!duckstats"
variable stat_auth "-|-"

variable topDuck_cmd "!topduck"
variable topDuck_auth "-|-"

# Order and permissions required to make purchases in the store.
variable shop_cmd "!shop"
variable shop_auth "-|-"

# Command and permissions required to disarm a player.
variable unarm_cmd "!unarm"
variable unarm_cmd2 "!disarm"
variable unarm_auth "mno|mnol"

# Command and permissions required to rearm a player.
variable rearm_cmd "!rearm"
variable rearm_auth "no|no"

# Command and permissions required to display the list of hunters or
# perform a search in it (order by private message only).
variable findplayer_cmd "ducklist"
variable findplayer_auth "mno|mnol"

# Command and permissions required to merge statistics of two
# players (order by private message only).
variable fusion_cmd "duckfusion"
variable fusion_auth "mno|mnol"

# Command and permissions required to rename statistics profile
# of a player (order by private message only).
variable rename_cmd "duckrename"
variable rename_auth "mno|mnol"

# Command and permissions required to delete statistics profile
# of a player (order by private message only).
variable delete_cmd "duckdelete"
variable delete_auth "mno|mnol"

# Command and permissions required to view flight planning
# of ducks for the current day (if method = 2, order by private message
# uniquely).
variable planning_cmd "duckplanning"
variable planning_auth "mno|mnol"

# Command and permissions required to recalculate a schedule
# different from duck flights for the current day (if method = 2,
# order by private message only).
variable replanning_cmd "duckreplanning"
variable replanning_auth "mno|mnol"

# Command and permissions required to make a duck fly away
# manually (order by private message only).
variable launch_cmd "ducklaunch"
variable launch_auth "n|n"

# Command and permissions required to export player data as
# array form in a text file.
variable export_cmd "duckexport"
variable export_auth "mno|mnol"

# List of handles that will not be allowed to play, separated by a space.
# Be case sensitive.
variable blacklisted_handles {}



##### ANTIFLOOD ########################################## ##################

# Enable antiflood? (0 = disabled / 1 = enabled)
variable antiflood 1

# Permissions required to override flooding
variable can_Flood_bot "mno|mnol"

# Individual flood control.
# When it activates, the command will be blocked for the user who has it
# triggered only.
# Example: "10:600" = 10 requests maximum in 600 seconds, the following will be
# ignored.
# Threshold for the !bang command:
variable flood_shoot "30:600"
# Threshold for the !reload command:
variable flood_reload "15:120"
# Threshold for the !duckstats command:
variable flood_stats "2:120"
# Threshold for the !lastduck command:
variable flood_lastduck "1:300"
# Threshold for the !shop order:
variable flood_shop "20:600"

# Global flood control, all commands combined.
# When activated, script commands are blocked for everyone
# on the concerned channel.
# Note: for the number of requests, specify a value greater than the
# largest value set for individual flood control.
variable flood_global "60:600"

# Minimum time interval between the display of 2 warning messages that
# the antiflood has been triggered (do not set this value too low so as not to
# not be flooded by antiflood warning messages...)
variable antiflood_msg_interval 100



